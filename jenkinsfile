pipeline {
    agent { label 'Jenkins-Agent' }
    tools {
        jdk 'Java17'
        maven 'Maven3'
    }
    
    environment {
	    APP_NAME = "pipeline-project-app"
            RELEASE = "1.0.0"
            DOCKERHUB_CREDENTIALS = credentials('dockerhub')
	        //JENKINS_API_TOKEN = credentials("JENKINS_API_TOKEN")
    }

    stages{
        stage("Cleanup Workspace"){
                steps {
                cleanWs()
                }
        }

        stage("Checkout from SCM"){
                steps {
                    git branch: 'main', credentialsId: 'github', url: "https://github.com/dcolanderjr/pipeline_project"
                }
        }

        stage("Build Application"){
            steps {
                sh "mvn clean package"
            }

       }

       stage("Test Application"){
           steps {
                 sh "mvn test"
           }
       }

       stage("SonarQube Analysis"){
           steps {
	           script {
		        withSonarQubeEnv(credentialsId: 'jenkins-sonarqube-token') { 
                        sh "mvn sonar:sonar"
		        }
	           }	
           }
       }

       stage("Quality Gate"){
           steps {
               script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'jenkins-sonarqube-token'
                }	
            }

        }

       stage('Login to Docker Hub') {
            steps {
                script {
                    sh "sudo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin"
                        echo 'Login to Docker Hub successful'
                }
            }
        }

        stage('Push Image to DockerHub') {
            steps{
                sh "sudo docker push dcolanderjr/pipeline_project:latest"
                    echo 'Image pushed to DockerHub'
            }       
        }
    }
}